---
apiVersion: apps/v1
kind: Deployment
metadata:
  labels:
    name: apiserver
  name: apiserver
spec:
  replicas: 1
  selector:
    matchLabels:
      name: apiserver
  template:
    metadata:
      labels:
        name: apiserver
    spec:
      containers:
      # the tacos api server
      - image: iad.ocir.io/odx-pipelines/spinnaker/demo_tacos-api:latest
        name: apiserver
        ports:
        - containerPort: 32001
          protocol: TCP
        env:
          - name: MONGO_HOST
            value: "localhost"
      # the database
      - image: iad.ocir.io/odx-pipelines/spinnaker/tacos-mongo:latest
        name: mongo
        ports:
        - containerPort: 27107
          protocol: TCP
      # the tacos web frontend
      - image: iad.ocir.io/odx-pipelines/spinnaker/demo_tacos-react:latest
        name: webserver
        ports:
        - containerPort: 32000
          protocol: TCP
      # statsd exporter for metrics collection
      - name: statsd-exporter
        image: phx.ocir.io/odx-sre/sauron/statsd-exporter:latest
        imagePullPolicy: IfNotPresent
      # prometheus pusher to push metrics out to sauron
      - name: prometheus-pusher
        image: phx.ocir.io/odx-sre/sauron/prometheus-pusher:1.0.1_5
        imagePullPolicy: IfNotPresent
        env:
        - name: PUSHGATEWAY_URL
          valueFrom:
            secretKeyRef:
              name: sauron-service-binding
              key: prometheuspushgatewayurl
        - name: PUSHGATEWAY_USER
          valueFrom:
            secretKeyRef:
              name: sauron-service-binding
              key: user
        - name: PUSHGATEWAY_PASSWORD
          valueFrom:
            secretKeyRef:
              name: sauron-service-binding
              key: password
        - name: PULL_URL_target1
          value: http://localhost:9102/metrics
        - name: PUSH_INTERVAL
          value: "10"
      imagePullSecrets:
      - name: myregistrykey 
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: apihost
  name: apihost
spec:
  ports:
    - port: 32001
      targetPort: 32001
  selector:
    name: apiserver
---
apiVersion: v1
kind: Service
metadata:
  labels:
    name: web
  name: web
spec:
  ports:
    - port: 32000
      targetPort: 32000
  selector:
    name: apiserver
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
  name: tacos
spec:
  rules:
  - host: tacos.wercker.com
    http:
      paths:
      - backend:
          serviceName: apihost
          servicePort: 32001
---
apiVersion: extensions/v1beta1
kind: Ingress
metadata:
  annotations:
    kubernetes.io/ingress.class: nginx
    nginx.ingress.kubernetes.io/proxy-body-size: 500m
  name: www-tacos
spec:
  rules:
  - host: www.tacos.wercker.com
    http:
      paths:
      - backend:
          serviceName: web
          servicePort: 32000